#!/bin/sh
# Init script for logstash
# Maintained by Elasticsearch
# Generated by pleaserun.
# Implemented based on LSB Core 3.1:
#   * Sections: 20.2, 20.3
#
### BEGIN INIT INFO
# Provides:          kibana
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description:
# Description:       Starts Kibana as a daemon.
### END INIT INFO

PATH=/sbin:/usr/sbin:/bin:/usr/bin
export PATH

. /lib/lsb/init-functions

if [ `id -u` -ne 0 ]; then
   echo "You need root privileges to run this script"
   exit 1
fi

pidfile="/var/run/$name.pid"

KBN_USER=<%= scope.lookupvar('kibana::user') %>
KBN_GROUP=<%= scope.lookupvar('kibana::group') %>
KBN_HOME=<%= scope.lookupvar('kibana::install_dir') %>/kibana
KBN_LOG_DIR=/var/log/kibana
PID_FILE=/var/run/kibana.pid
NAME=kibana

program=${KBN_HOME}/bin/kibana

start() {
  log_daemon_msg "Starting $NAME"
  
  pid=`pidofproc -p $PID_FILE kibana`
  if [ -n "$pid" ] ; then
    log_begin_msg "Already running."
    log_end_msg 0
    exit 0
  fi
  
  # Start Daemon
  start-stop-daemon --start --pidfile "$PID_FILE" --make-pidfile --background -c $KBN_USER:$KBN_GROUP --exec $program
  log_end_msg $?
}

stop() {
log_daemon_msg "Stopping $NAME"

  if [ -f "$PID_FILE" ]; then
    start-stop-daemon --stop --pidfile "$PID_FILE" --retry=TERM/20/KILL/5 >/dev/null
    if [ $? -eq 1 ]; then
      log_progress_msg "$NAME is not running but pid file exists, cleaning up"
    elif [ $? -eq 3 ]; then
      PID="`cat $PID_FILE`"
      log_failure_msg "Failed to stop $NAME (pid $PID)"
      exit 1
    fi
    rm -f "$PID_FILE"
  else
    log_progress_msg "(not running)"
  fi
  log_end_msg 0
}

status() {
  status_of_proc -p $PID_FILE kibana kibana && exit 0 || exit $?
}

case "$1" in
  start)
    start
    exit $?
    ;;
  stop) stop ;;
  status)
    status;;
  restart)
    stop && start
    ;;
  *)
    echo "Usage: $SCRIPTNAME {start|stop|force-stop|status|restart}" >&2
    exit 3
  ;;
esac

exit $?